/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.algebra;

import hr.algebra.dal.Repository;
import hr.algebra.dal.RepositoryFactory;
import hr.algebra.model.login.User;
import hr.algebra.utils.MessageUtils;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author asim2
 */
public class ManageUsersPanel extends javax.swing.JPanel {

    private static final String DELETE_USER_MESSAGE = "Are you sure you want to delete this user?";
    private static final String DELETE_USER = "Delete user";
    
    private static final String UNRECOVERABLE_ERROR_MESSAGE = "Cannot initiate the form";
    private static final String UNRECOVERABLE_ERROR = "Unrecoverable error";
    
    private static final String ACTION_FAILED_USER = "Please select user.";
    private static final String ACTION_FAILED = "Action failed";
    
    private DefaultListModel<User> userModel;
    private Repository repository;

    private User selectedUser;

    /**
     * Creates new form ManageUsersPanel
     */
    public ManageUsersPanel() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lsUsers = new javax.swing.JList<>();
        btnDeleteUser = new javax.swing.JButton();
        btnMakeUserAdmin = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1192, 855));

        jScrollPane1.setViewportView(lsUsers);

        btnDeleteUser.setText("Delete user");
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });

        btnMakeUserAdmin.setText("Make user admin");
        btnMakeUserAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakeUserAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 534, Short.MAX_VALUE)
                        .addComponent(btnMakeUserAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMakeUserAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(61, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        selectedUser = (User) lsUsers.getSelectedValue();
        if (selectedUser == null) {
            MessageUtils.showInformationMessage(ACTION_FAILED, ACTION_FAILED_USER);
            return;
        }
        try {
            if (MessageUtils.showConfirmDialog(DELETE_USER, DELETE_USER_MESSAGE) == JOptionPane.YES_OPTION) {
                repository.deleteUser(selectedUser.getId());
                loadModel();
            }

        } catch (Exception ex) {
            Logger.getLogger(ManageUsersPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteUserActionPerformed
    
    

    private void btnMakeUserAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakeUserAdminActionPerformed
        selectedUser = (User) lsUsers.getSelectedValue();
        if (selectedUser == null) {
            MessageUtils.showInformationMessage(ACTION_FAILED, ACTION_FAILED_USER);
            return;
        }
        try {
            repository.makeUserAdmin(selectedUser.getId());
            loadModel();
        } catch (Exception ex) {
            Logger.getLogger(ManageUsersPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnMakeUserAdminActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnMakeUserAdmin;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<User> lsUsers;
    // End of variables declaration//GEN-END:variables

    private void init() {
        try {
            repository = RepositoryFactory.getRepository();
            userModel = new DefaultListModel<>();
            loadModel();
        } catch (Exception ex) {
            Logger.getLogger(ManageUsersPanel.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage(UNRECOVERABLE_ERROR, UNRECOVERABLE_ERROR_MESSAGE);
            System.exit(1);
        }
    }
    

    private void loadModel() throws Exception {
        List<User> users = repository.getUsers();
        userModel.clear();
        users.forEach(userModel::addElement);
        lsUsers.setModel(userModel);
    }
}
